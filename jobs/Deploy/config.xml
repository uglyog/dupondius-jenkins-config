<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Deploy to an existing instance</description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>20</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/nadnerb/dashboard/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>HOSTNAME</name>
          <description>Hostname to deploy to</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENVIRONMENT_TO_DEPLOY</name>
          <description>The environment configuration to use (development, test or production)</description>
          <defaultValue>development</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description>Tag to checkout</description>
          <defaultValue>HEAD</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>git@github.com:nadnerb/dashboard.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>true</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>true</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e
env | sort

if [ ! $HOSTNAME ]
  then 
    printf &apos;\033[0;33;41m                                                                                                        \033[0m\n&apos;
    printf &apos;\033[0;33;41m                              HOSTNAME is required to deploy to!                                        \033[0m\n&apos;
    printf &apos;\033[0;33;41m                                                                                                        \033[0m\n&apos;
    exit 1
fi

echo Checking out $TAG ...
git checkout $TAG
echo HEAD is now: `git log --decorate --format=format:&apos;%H %d&apos; --tags | grep \(HEAD`</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>
bundle install
PIPELINE_VERSION=$TAG cap HOSTS=$HOSTNAME.dupondius.dupondi.us $ENVIRONMENT_TO_DEPLOY deploy</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>sleep 20
curl http://$HOSTNAME.dupondius.dupondi.us/status/heart_beat</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>APP_VERSION=`curl -fsS http://$HOSTNAME.dupondius.dupondi.us/status/version`
if [ &quot;$APP_VERSION&quot; -ne &quot;$TAG&quot; ]
  then
    echo &quot;Expected $TAG but got $APP_VERSION instead&quot;
    exit 1
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <ruby-proxy-object>
      <ruby-object ruby-class="Jenkins::Plugin::Proxies::BuildWrapper" pluginid="rvm">
        <pluginid pluginid="rvm" ruby-class="String">rvm</pluginid>
        <object ruby-class="RvmWrapper" pluginid="rvm">
          <impl pluginid="rvm" ruby-class="String">ruby-1.9.3@dashboard</impl>
        </object>
      </ruby-object>
    </ruby-proxy-object>
    <org.jenkinsci.plugins.xvfb.XvfbBuildWrapper>
      <installationName>system</installationName>
      <screen>1024x768x24</screen>
      <debug>false</debug>
      <timeout>0</timeout>
      <additionalOptions></additionalOptions>
    </org.jenkinsci.plugins.xvfb.XvfbBuildWrapper>
  </buildWrappers>
</project>
