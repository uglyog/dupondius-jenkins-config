<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Deploy to an existing instance</description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>20</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty>
      <projectUrl>https://github.com/uglyog/dupondius-grails-skeleton/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>HOSTNAME</name>
          <description>Hostname to deploy to</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ENVIRONMENT_TO_DEPLOY</name>
          <description>The environment configuration to use (development, test or production)</description>
          <defaultValue>prod</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description>Tag to checkout</description>
          <defaultValue>HEAD</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>git@github.com:uglyog/dupondius-grails-skeleton.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>true</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>true</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -e
env | sort

if [ ! $HOSTNAME ]
  then 
    printf &apos;\033[0;33;41m                                                                                                        \033[0m\n&apos;
    printf &apos;\033[0;33;41m                              HOSTNAME is required to deploy to!                                        \033[0m\n&apos;
    printf &apos;\033[0;33;41m                                                                                                        \033[0m\n&apos;
    exit 1
fi

echo Checking out $TAG ...
git checkout $TAG
echo HEAD is now: `git log --decorate --format=format:&apos;%H %d&apos; --tags | grep \(HEAD`

sed -i s/app.version=.*/app.version=$TAG/ application.properties </command>
    </hudson.tasks.Shell>
    <com.g2one.hudson.grails.GrailsBuilder>
      <targets>&quot;$ENVIRONMENT_TO_DEPLOY war --stacktrace&quot;</targets>
      <name>grails</name>
      <grailsWorkDir></grailsWorkDir>
      <projectWorkDir></projectWorkDir>
      <projectBaseDir></projectBaseDir>
      <serverPort></serverPort>
      <properties></properties>
      <forceUpgrade>false</forceUpgrade>
      <nonInteractive>true</nonInteractive>
      <useWrapper>false</useWrapper>
    </com.g2one.hudson.grails.GrailsBuilder>
    <hudson.tasks.Shell>
      <command>scp -o StrictHostKeyChecking=no target/*.war deployer@$HOSTNAME:/var/tmp
ssh deployer@$HOSTNAME &quot;~/deploy.sh $PIPELINE_VERSION&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>sleep 120
curl -fsS http://$HOSTNAME:8080/status</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>APP_VERSION=`curl -fsS http://$HOSTNAME.grails.dupondi.us:8080/status/version`
if [ &quot;$APP_VERSION&quot; -ne &quot;$TAG&quot; ]
  then
    echo &quot;Expected $TAG but got $APP_VERSION instead&quot;
    exit 1
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>